{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan Seow\\\\Desktop\\\\CS\\\\Web Dev (Udemy)\\\\My Work\\\\Bookstagram\\\\client\\\\src\\\\components\\\\EditBook.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { renderImage } from \"../helper\";\nimport { useHistory } from 'react-router-dom';\n\nfunction EditBook(props) {\n  const history = useHistory();\n  const [bookName, setBookName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [bookDes, setBookDes] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [imageBuffer, setImageBuffer] = useState([]);\n  const [imageType, setImageType] = useState(\"\");\n  const [image, setImage] = useState({});\n  const [isNewImage, setIsNewImage] = useState(false); // GET the book\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      axios.get(\"http://localhost:4000/edit-book/\" + props.match.params.id).then(res => {\n        setBookName(res.data.name);\n        setAuthor(res.data.author);\n        setBookDes(res.data.description);\n        setGenre(res.data.genre);\n        setImageBuffer(res.data.image.data.data);\n        setImageType(res.data.image.contentType);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    return () => isSubscribed = false;\n  }, [props.match.params.id]);\n\n  const uploadImage = event => {\n    if (event.target.files.length === 0) {\n      // When image upload is cancelled\n      setImage({});\n    } else {\n      setImage({\n        preview: URL.createObjectURL(event.target.files[0]),\n        // Link for image preview\n        file: event.target.files[0] // File for upload\n\n      });\n      setIsNewImage(true);\n    }\n  };\n\n  const changeBookName = event => {\n    setBookName(event.target.value);\n  };\n\n  const changeAuthor = event => {\n    setAuthor(event.target.value);\n  };\n\n  const changeBookDes = event => {\n    setBookDes(event.target.value);\n  };\n\n  const genreSelect = event => {\n    setGenre(event.target.value);\n  };\n\n  const submitForm = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", bookName); // Append the values with key value pairs\n\n    formData.append(\"author\", author);\n    formData.append(\"description\", bookDes);\n    formData.append(\"genre\", genre);\n    formData.append(\"image\", image.file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      } // Specify that you are sending form data\n\n    };\n    axios.patch(\"http://localhost:4000/edit-book/\" + props.match.params.id, formData, config).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    setBookName(\"\");\n    setAuthor(\"\");\n    setBookDes(\"\");\n    setGenre(\"\");\n    setImage({});\n    history.goBack();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"preview-image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: isNewImage ? image.preview : renderImage(imageBuffer, imageType),\n    alt: \"book-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Form, {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"form-input\",\n    as: Col,\n    controlId: \"book-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    value: bookName,\n    placeholder: \"An Awesome Book!\",\n    onChange: changeBookName,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"form-input\",\n    as: Col,\n    controlId: \"book-author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Author\"), React.createElement(Form.Control, {\n    type: \"text\",\n    value: author,\n    placeholder: \"John Doe\",\n    onChange: changeAuthor,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    className: \"form-input\",\n    controlId: \"book-summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    style: {\n      resize: \"none\"\n    },\n    as: \"textarea\",\n    rows: \"5\",\n    value: bookDes,\n    placeholder: \"This is a book about awesome books!\",\n    onChange: changeBookDes,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"form-input\",\n    as: Col,\n    controlId: \"book-genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Genre\"), React.createElement(Form.Control, {\n    as: \"select\",\n    value: genre,\n    onChange: genreSelect,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Choose...\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Fiction\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Non-Fiction\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Thriller\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Business\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Science\"))), React.createElement(Form.Group, {\n    className: \"form-input\",\n    as: Col,\n    controlId: \"book-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Photo\"), React.createElement(Form.Control, {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: uploadImage,\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"submit-form-btn-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"submit-form-btn\",\n    variant: \"primary\",\n    size: \"lg\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Save Changes\"))));\n}\n\nexport default EditBook;","map":{"version":3,"sources":["C:/Users/Jonathan Seow/Desktop/CS/Web Dev (Udemy)/My Work/Bookstagram/client/src/components/EditBook.js"],"names":["React","useState","useEffect","Form","Col","Button","axios","renderImage","useHistory","EditBook","props","history","bookName","setBookName","author","setAuthor","bookDes","setBookDes","genre","setGenre","imageBuffer","setImageBuffer","imageType","setImageType","image","setImage","isNewImage","setIsNewImage","isSubscribed","get","match","params","id","then","res","data","name","description","contentType","catch","error","console","log","uploadImage","event","target","files","length","preview","URL","createObjectURL","file","changeBookName","value","changeAuthor","changeBookDes","genreSelect","submitForm","preventDefault","formData","FormData","append","config","headers","patch","response","goBack","resize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { renderImage } from \"../helper\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction EditBook(props) {\r\n\r\n  const history = useHistory();\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [bookDes, setBookDes] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [imageBuffer, setImageBuffer] = useState([]);\r\n  const [imageType, setImageType] = useState(\"\");\r\n  const [image, setImage] = useState({});\r\n  const [isNewImage, setIsNewImage] = useState(false);\r\n\r\n  // GET the book\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    if (isSubscribed) {\r\n      axios.get(\"http://localhost:4000/edit-book/\" + props.match.params.id).then(res => {\r\n        setBookName(res.data.name);\r\n        setAuthor(res.data.author);\r\n        setBookDes(res.data.description);\r\n        setGenre(res.data.genre);\r\n        setImageBuffer(res.data.image.data.data);\r\n        setImageType(res.data.image.contentType);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    return () => isSubscribed = false;\r\n\r\n  }, [props.match.params.id]);\r\n\r\n  const uploadImage = (event) => {\r\n    if (event.target.files.length === 0) { // When image upload is cancelled\r\n      setImage({});\r\n    } else {\r\n      setImage({\r\n        preview: URL.createObjectURL(event.target.files[0]), // Link for image preview\r\n        file: event.target.files[0] // File for upload\r\n      })\r\n      setIsNewImage(true);\r\n    }\r\n  }\r\n\r\n  const changeBookName = (event) => {\r\n    setBookName(event.target.value);\r\n  }\r\n  const changeAuthor = (event) => {\r\n    setAuthor(event.target.value);\r\n  }\r\n  const changeBookDes = (event) => {\r\n    setBookDes(event.target.value);\r\n  }\r\n  const genreSelect = (event) => {\r\n    setGenre(event.target.value);\r\n  }\r\n\r\n  const submitForm = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", bookName); // Append the values with key value pairs\r\n    formData.append(\"author\", author);\r\n    formData.append(\"description\", bookDes);\r\n    formData.append(\"genre\", genre);\r\n    formData.append(\"image\", image.file);\r\n\r\n    const config = {\r\n      headers: {\"content-type\": \"multipart/form-data\"} // Specify that you are sending form data\r\n    }\r\n\r\n    axios.patch(\"http://localhost:4000/edit-book/\" + props.match.params.id, formData, config).then(response => {\r\n      console.log(response.data)\r\n    }).catch(error => {\r\n        console.log(error)\r\n      });\r\n\r\n    setBookName(\"\");\r\n    setAuthor(\"\");\r\n    setBookDes(\"\");\r\n    setGenre(\"\");\r\n    setImage({});\r\n\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"preview-image-wrapper\">\r\n        <img src={isNewImage ? image.preview : renderImage(imageBuffer, imageType)} alt=\"book-preview\"/>\r\n      </div>\r\n\r\n      <Form onSubmit={submitForm}>\r\n\r\n        <Form.Row>\r\n          <Form.Group className=\"form-input\" as={Col} controlId=\"book-name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" value={bookName} placeholder=\"An Awesome Book!\" onChange={changeBookName} required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-input\" as={Col} controlId=\"book-author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control type=\"text\" value={author} placeholder=\"John Doe\" onChange={changeAuthor} required/>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group className=\"form-input\" controlId=\"book-summary\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control style={{resize: \"none\"}} as=\"textarea\" rows=\"5\" value={bookDes} placeholder=\"This is a book about awesome books!\" onChange={changeBookDes} required/>\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n\r\n          <Form.Group className=\"form-input\" as={Col} controlId=\"book-genre\">\r\n            <Form.Label>Genre</Form.Label>\r\n            <Form.Control as=\"select\" value={genre} onChange={genreSelect} required>\r\n              <option>Choose...</option>\r\n              <option>Fiction</option>\r\n              <option>Non-Fiction</option>\r\n              <option>Thriller</option>\r\n              <option>Business</option>\r\n              <option>Science</option>\r\n\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-input\" as={Col} controlId=\"book-image\">\r\n            <Form.Label>Photo</Form.Label>\r\n            <Form.Control type=\"file\" accept=\"image/*\" onChange={uploadImage} encType=\"multipart/form-data\"  />\r\n          </Form.Group>\r\n\r\n        </Form.Row>\r\n\r\n        <div className=\"submit-form-btn-wrapper\">\r\n          <Button className=\"submit-form-btn\" variant=\"primary\" size=\"lg\" type=\"submit\">Save Changes</Button>\r\n        </div>\r\n\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditBook;\r\n"]},"metadata":{},"sourceType":"module"}